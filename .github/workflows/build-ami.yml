name: Build AMI using Packer

on:
  push:
    branches:
      - packer-br

jobs:
  build_ami:
    name: db_health_check
    runs-on: ubuntu-latest

    steps:
      - name: Check if this push is from a PR merge
        run: |
          if [[ ${{ github.event_name }} == 'push' && ${{ contains(github.event.head_commit.message, 'Merge pull request') }} ]]; then
            echo "This push is from a pull request merge."
          else
            echo "This push is not from a pull request merge."
            exit 1
          fi

      - name: Checkout code
        if: success()
        uses: actions/checkout@v2

      #ADD INTEGRATION FROM JOBS
      - name: Zip Folder
        if: success()
        run: zip -r webapp.zip .

      - name: Setting up packer
        uses: hashicorp/setup-packer@main

      - id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}'
        
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'
  
      - name: 'Use gcloud CLI'
        run: 'gcloud info'

      - name: Run Packer
        run: |
          cd packer
          packer init final.pkr.hcl
          packer build \
            -var "gcp_service_account_key=${{secrets.GCP_SERVICE_ACCOUNT_KEY}}" final.pkr.hcl

      # - name: Build GMI (Google Machine Image)
      #   if: success()
      #   run: |
      #     cd deployment/ami
      #     packer init ./
      #     packer build \
      #       -var "aws_access_key=${{ secrets.AWS_ACCESS_KEY }}" \
      #       -var "aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
      #       -var "source_ami=${{ vars.SOURCE_AMI }}" \
      #       -var "ami_region=${{ vars.AMI_REGION }}" \
      #       -var "zip_file_path=${{ vars.APP_ZIP_PATH }}" \
      #       -var "ssh_username=${{ vars.SSH_USERNAME }}" \
      #       -var "subnet_id=${{ vars.SUBNET_ID }}" \
      #       -var "instanceType=${{ vars.INSTANCE_TYPE }}" \
      #       -var "ebsVolumeSize=${{ vars.EBS_VOLUME_SIZE }}" \
      #       -var "ebsVolumeType=${{ vars.EBS_VOLUME_TYPE }}" \
      #       -var "webappDestinationFolder=${{ vars.WEBAPP_DESTINATION_PATH }}" .